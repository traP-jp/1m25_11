name: Server

on:
  push:
    paths:
      - "server/**"
    branches:
      - main
  pull_request:
    paths:
      - "server/**"

permissions:
  checks: write        # リント結果の表示権限
  contents: read       # リポジトリのファイルの読み取り権限
  pull-requests: write # プルリクにコメントする権限

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./server/go.mod
      - name: Build with xc
        run: go run github.com/joerdav/xc/cmd/xc@latest build

  lint:
    name: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      # リポジトリからソースコードを取得
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Reviewdogによるgolangci-lintの実行
      - name: Run golangci-lint with Reviewdog
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}     # GithubAPI実行用のトークン設定
          go_version: 1.24.4                            # 解析に使用するGoバージョン設定
          reporter: github-pr-review                    # リント結果をレビューとして出力する設定
          level: warning                                # 検出されたissueのレベルをwarningにする設定
          workdir: server
          golangci_lint_flags: "--config=.golangci.yml" # .golangci.ymlの内容でリントを実行させる設定

  test-unit:
    name: Unit Test
    runs-on: ubuntu-latest
    needs:
      - build
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./server/go.mod
      - name: Unit test with xc
        run: go run github.com/joerdav/xc/cmd/xc@latest test-unit

  test-integration:
    name: Integration Test
    runs-on: ubuntu-latest
    needs:
      - build
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./server/go.mod
      - name: Integration test with xc
        run: go run github.com/joerdav/xc/cmd/xc@latest test-integration

  dependabot-automerge:
    name: Dependabot Automerge
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs:
      - build
      - lint
      - test-unit
      - test-integration
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        uses: dependabot/fetch-metadata@v2
        id: metadata
      - uses: actions/checkout@v4
      - name: Enable automerge
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
          steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: |
          gh pr merge ${{ github.event.number }} --auto --merge
        env:
          GITHUB_TOKEN: ${{ github.token }}
