/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/stamps/search': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
         * スタンプ検索
         * @description 複数の検索条件を組み合わせ、スタンプを検索する。
         */
    get: {
      parameters: {
        query?: {
          /** @description name, tag, description, creatorのいずれかに含まれるキーワード（空白区切りで複数指定可能、いずれかを含んでいれば表示） */
          q?: string;
          /** @description スタンプ名に含まれるキーワード（空白区切りで複数指定可能、いずれかを含んでいれば表示） */
          name?: string;
          /** @description タグ名に含まれるキーワード（空白区切りで複数指定可能、いずれかを含んでいれば表示） */
          tag?: string[];
          /** @description 説明文に含まれるキーワード（空白区切りで複数指定可能、いずれかを含んでいれば表示） */
          description?: string;
          /** @description 作成者名に含まれるキーワード（空白区切りで複数指定可能、いずれかを含んでいれば表示） */
          creator?: string;
          /** @description スタンプ作成日時の開始日 (YYYY-MM-DD) */
          created_since?: string;
          /** @description スタンプ作成日時の終了日 (YYYY-MM-DD) */
          created_until?: string;
          /** @description スタンプ更新日時の開始日 (YYYY-MM-DD) */
          updated_since?: string;
          /** @description スタンプ更新日時の終了日 (YYYY-MM-DD) */
          updated_until?: string;
          /** @description Unicode絵文字の種類フィルタ */
          stamp_type_unicode?: 'all' | 'unicode_only' | 'not_unicode_only';
          /** @description アニメーションかどうか指定(現時点ではallのみ) */
          stamp_type_animation?: 'all' | 'animated_only' | 'not_animated_only';
          /** @description 月間使用回数の最小値 */
          count_monthly_min?: number;
          /** @description 月間使用回数の最大値 */
          count_monthly_max?: number;
          /** @description あいまい検索を有効にするか（現時点では未実装） */
          fuzzy?: boolean;
          /** @description ソート順 */
          sortby?: 'relativity' | 'created_at_asc' | 'created_at_desc' | 'count_monthly_asc' | 'count_monthly_desc' | 'count_total_asc' | 'count_total_desc';
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['SearchResult'];
          };
        };
        /** @description リクエスト不正 */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/stamps/ranking': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
         * スタンプ使用回数ランキング
         * @description スタンプとその使用回数のデータを返却する
         */
    get: {
      parameters: {
        query?: {
          /** @description 開始日 (YYYY-MM-DD)、未指定時は1ヶ月前 */
          since?: string;
          /** @description 終了日 (YYYY-MM-DD)、未指定時は昨日。since以降、昨日までの入力を許可 */
          until?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['RankingResult'][];
          };
        };
        /** @description リクエスト不正 */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/stamps': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** 全スタンプ一覧取得 */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['StampSummary'][];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/stamps/{stampId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** スタンプ詳細情報取得 */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stampId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['Stamp'];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description スタンプが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/stamps/{stampId}/tags/{tagId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** スタンプへのタグ付け */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stampId: string;
          tagId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description リクエストが不正 */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description スタンプまたはタグが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description すでに追加されているタグである */
        409: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    /** スタンプのタグ付け解除 */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stampId: string;
          tagId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 権限がない */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description スタンプまたはタグが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 現在紐づいていないタグである */
        409: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/stamps/{stampId}/descriptions': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
         * スタンプの説明文一覧を取得
         * @description そのスタンプに投稿されたすべてのユーザーの説明文を取得します。
         */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stampId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['StampDescription'][];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description スタンプが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    /**
         * スタンプの説明文を更新
         * @description 自分が投稿した説明文を更新します。自分が投稿していない場合は404エラーになります。
         */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stampId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': {
            /** @description 更新後の説明文 */
            description: string;
          };
        };
      };
      responses: {
        /** @description 更新成功 */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description リクエストが不正 */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 編集する権限がない */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 自分が投稿した説明文が見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    /**
         * スタンプに説明文を追加
         * @description ユーザーは1つのスタンプに対し1つだけ説明文を投稿できます。既に投稿済みの場合はエラーになります。
         */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stampId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': {
            /** @description 投稿する説明文 */
            description: string;
          };
        };
      };
      responses: {
        /** @description 作成成功 */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description リクエストが不正 */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description スタンプが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 既にこのスタンプに説明文を投稿済み */
        409: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    /**
         * スタンプの説明文を削除
         * @description 自分が投稿した説明文を削除します。自分が投稿していない場合は404エラーになります。
         */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          stampId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 削除成功 */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 削除する権限がない */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 自分が投稿した説明文が見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/tags': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** 全タグ一覧取得 */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['TagSummary'][];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    /** 新しいタグを作成 */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': {
            name: string;
          };
        };
      };
      responses: {
        /** @description 作成成功 */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['TagSummary'];
          };
        };
        /** @description リクエストが不正 */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description タグ名が既に存在する */
        409: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/tags/{tagId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
         * タグの詳細情報を取得
         * @description 指定されたタグの詳細情報と、そのタグが付けられているスタンプ一覧を取得します。
         */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tagId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['Tag'];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description タグが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    /** タグ名を編集 */
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tagId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': {
            name: string;
          };
        };
      };
      responses: {
        /** @description 成功 */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 権限がない */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description タグが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    post?: never;
    /** タグを削除 (管理者のみ) */
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          tagId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 管理者権限がない */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description タグが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/tags/{tagId}/stamps': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
         * 特定のタグに紐づけられたスタンプ一覧を取得
         * @description 指定されたタグが付けられているすべてのスタンプを取得します。
         */
    get: {
      parameters: {
        query?: {
          /** @description ソートキー */
          sort?: 'created_at' | 'count_monthly' | 'count_total' | 'name';
          /** @description ソート順 */
          order?: 'asc' | 'desc';
        };
        header?: never;
        path: {
          /** @description 取得したいスタンプに付けられているタグのUUID */
          tagId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['StampSummary'][];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description タグが見つからない */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/login': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
         * traQ OAuth2.0ログイン開始
         * @description traQのOAuth2.0認証を開始するためのリダイレクトURLを取得します。
         */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description traQの認証ページへリダイレクト */
        302: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description サーバーエラー */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/callback': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
         * OAuth2.0コールバック処理
         * @description traQからのOAuth2.0コールバックを処理し、認証を完了します。
         */
    get: {
      parameters: {
        query: {
          /** @description traQから返される認証コード */
          code: string;
          /** @description CSRF攻撃を防ぐためのstate パラメータ */
          state: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 認証成功後のリダイレクト */
        302: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description リクエストが不正 */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
        /** @description サーバーエラー */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/me': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** ログインユーザーのプロファイル情報取得 */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['UserStatus'];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/users-list': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** 全ユーザーの一覧 */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 成功 */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['UserProfile'][];
          };
        };
        /** @description 認証エラー */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Stamp: {
      /**
             * Format: uuid
             * @description スタンプのUUID(traQより取得)
             */
      stamp_id: string;
      /** @description スタンプ名(traQより取得) */
      stamp_name: string;
      /**
             * Format: uuid
             * @description 画像ファイルのUUID(traQより取得)
             */
      file_id: string;
      /**
             * Format: uuid
             * @description 保有者のユーザUUID(traQより取得)
             */
      creator_id: string;
      /** @description Unicode絵文字か否か(traQより取得) */
      is_unicode: boolean;
      /** @description アニメーションスタンプか否か(取得方法は未定, 現状は常にfalse) */
      is_animated: boolean;
      /**
             * Format: date-time
             * @description スタンプ作成日時 (ISO 8601, traQより取得)
             */
      created_at: string;
      /**
             * Format: date-time
             * @description スタンプ更新日時 (ISO 8601, traQより取得)
             */
      updated_at: string;
      /**
             * Format: int64
             * @description 直近30日間の使用回数 (stamp_daily_usages テーブルより取得)
             */
      count_monthly: number;
      /**
             * Format: int64
             * @description 全期間での使用回数 (stamp_daily_usages テーブルより取得)
             */
      count_total: number;
      descriptions: components['schemas']['StampDescription'][];
      tags: components['schemas']['TagSummary'][];
    };
    StampSummary: {
      /** Format: uuid */
      stamp_id: string;
      stamp_name: string;
      /** Format: uuid */
      file_id: string;
    };
    Tag: {
      /**
             * Format: uuid
             * @description タグのUUID
             */
      tag_id: string;
      /** @description タグ名 */
      tag_name: string;
      /**
             * Format: uuid
             * @description タグ作成者のユーザUUID
             */
      creator_id: string;
      /**
             * Format: date-time
             * @description タグ作成日時 (ISO 8601)
             */
      created_at: string;
      /**
             * Format: date-time
             * @description タグ更新日時 (ISO 8601)
             */
      updated_at: string;
      /** @description このタグが付けられているスタンプの数 */
      count: number;
      /** @description このタグが付けられているスタンプの一覧 */
      stamps: components['schemas']['StampSummary'][];
    };
    TagSummary: {
      /** Format: uuid */
      tag_id: string;
      tag_name: string;
    };
    StampDescription: {
      /**
             * Format: uuid
             * @description 説明文の作成者のユーザUUID
             */
      creator_id: string;
      /** @description スタンプの説明文 */
      description: string;
      /**
             * Format: date-time
             * @description 説明文の作成日時 (ISO 8601)
             */
      created_at: string;
      /**
             * Format: date-time
             * @description 説明文の更新日時 (ISO 8601)
             */
      updated_at: string;
    };
    UserStatus: {
      /**
             * Format: uuid
             * @description traQユーザーのUUID
             */
      user_id: string;
      /** @description 管理者権限の有無 (現時点では全員false) */
      is_admin: boolean;
      stamps_user_owned: components['schemas']['StampSummary'][];
      tags_user_created: components['schemas']['TagSummary'][];
      stamps_user_tagged: {
        stamp?: components['schemas']['StampSummary'];
        tag?: components['schemas']['TagSummary'];
      }[];
      descriptions_user_created: {
        stamp?: components['schemas']['StampSummary'];
        /**
                 * Format: uuid
                 * @description ユーザーが投稿した説明文のUUID
                 */
        description_id?: string;
      }[];
    };
    UserProfile: {
      /**
             * Format: uuid
             * @description traQユーザーのUUID
             */
      user_id: string;
      /** @description traQId(ユーザー名) */
      traq_id: string;
      /** @description traQ での表示名 */
      user_display_name: string;
      /**
             * Format: uuid
             * @description ユーザーアイコンのファイルID
             */
      user_icon_file_id: string;
    };
    SearchResult: {
      /** @description 検索条件を満たすスタンプの配列 */
      stamps: components['schemas']['StampSummary'][];
    };
    RankingResult: {
      /** Format: uuid */
      stamp_id: string;
      /** @description 指定した期間で、各スタンプが本文中で使用された回数 */
      body_count: number;
      /** @description 指定した期間で、各スタンプがリアクションで使用された回数 */
      reaction_count: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
